import { HttpService } from '@nestjs/axios';
export declare class PayloadsService {
    private httpService;
    constructor(httpService: HttpService);
    findAll(): import("rxjs").Observable<{
        id: string;
        type: string;
        name: string;
        dragon: {
            capsule: string;
            massReturnedKg: number;
            massReturnedLbs: number;
            flightTimeSec: number;
            manifest: string;
            waterLanding: boolean;
            landLanding: boolean;
        };
        longitude: number;
        reused: boolean;
        launch: string;
        orbit: string;
        massKg: number;
        massLbs: number;
        regime: string;
        referenceSystem: string;
        semiMajorAxisKm: number;
        eccentricity: number;
        periapsisKm: number;
        apoapsisKm: number;
        inclinationDeg: number;
        periodMin: number;
        lifespanYears: string;
        epoch: string;
        meanMotion: number;
        raan: number;
        argOfPericenter: number;
        meanAnomaly: number;
        manufacturers: string[];
        nationalities: string[];
        noradIds: number[];
        customers: string[];
    }[]>;
    findOne(id: string): import("rxjs").Observable<{
        id: string;
        type: string;
        name: string;
        dragon: {
            capsule: string;
            massReturnedKg: number;
            massReturnedLbs: number;
            flightTimeSec: number;
            manifest: string;
            waterLanding: boolean;
            landLanding: boolean;
        };
        longitude: number;
        reused: boolean;
        launch: string;
        orbit: string;
        massKg: number;
        massLbs: number;
        regime: string;
        referenceSystem: string;
        semiMajorAxisKm: number;
        eccentricity: number;
        periapsisKm: number;
        apoapsisKm: number;
        inclinationDeg: number;
        periodMin: number;
        lifespanYears: string;
        epoch: string;
        meanMotion: number;
        raan: number;
        argOfPericenter: number;
        meanAnomaly: number;
        manufacturers: string[];
        nationalities: string[];
        noradIds: number[];
        customers: string[];
    }>;
}
